// This file was auto-generated by @joelek/ts-autoguard. Edit at own risk.

import { guards as autoguard } from "@joelek/ts-autoguard";

export type Volume = {
	"replaygain_gain": number,
	"replaygain_peak": number,
	"mean_volume": number,
	"peak_volume": number
};

export const Volume = autoguard.Object.of({
	"replaygain_gain": autoguard.Number,
	"replaygain_peak": autoguard.Number,
	"mean_volume": autoguard.Number,
	"peak_volume": autoguard.Number
});

export type Track = {
	"number": number,
	"artists": string[],
	"title": string
};

export const Track = autoguard.Object.of({
	"number": autoguard.Number,
	"artists": autoguard.Array.of(autoguard.String),
	"title": autoguard.String
});

export type Disc = {
	"number": number,
	"artists": string[],
	"title": string,
	"year": number,
	"musicbrainz"?: string,
	"volume"?: Volume,
	"cover_art_url"?: string,
	"tracks": Track[]
};

export const Disc = autoguard.Object.of({
	"number": autoguard.Number,
	"artists": autoguard.Array.of(autoguard.String),
	"title": autoguard.String,
	"year": autoguard.Number,
	"musicbrainz": autoguard.Union.of(
		autoguard.Undefined,
		autoguard.String
	),
	"volume": autoguard.Union.of(
		autoguard.Undefined,
		Volume
	),
	"cover_art_url": autoguard.Union.of(
		autoguard.Undefined,
		autoguard.String
	),
	"tracks": autoguard.Array.of(Track)
});

export type Database = Record<string, undefined | Disc>;

export const Database = autoguard.Record.of(Disc);

export type Autoguard = {
	"Volume": Volume,
	"Track": Track,
	"Disc": Disc,
	"Database": Database
};

export const Autoguard = {
	"Volume": Volume,
	"Track": Track,
	"Disc": Disc,
	"Database": Database
};
