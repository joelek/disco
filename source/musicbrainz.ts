// This file was auto-generated by @joelek/ts-autoguard. Edit at own risk.

import { guards as autoguard } from "@joelek/ts-autoguard";

export type ArtistCredit = {
	"name": string
};

export const ArtistCredit = autoguard.Object.of<ArtistCredit>({
	"name": autoguard.String
});

export type Track = {
	"title": string,
	"artist-credit": ArtistCredit[]
};

export const Track = autoguard.Object.of<Track>({
	"title": autoguard.String,
	"artist-credit": autoguard.Array.of(autoguard.Reference.of<ArtistCredit>(() => ArtistCredit))
});

export type Disc = {
	"sectors": number,
	"offset-count": number,
	"id": string,
	"offsets": number[]
};

export const Disc = autoguard.Object.of<Disc>({
	"sectors": autoguard.Number,
	"offset-count": autoguard.Number,
	"id": autoguard.String,
	"offsets": autoguard.Array.of(autoguard.Number)
});

export type Media = {
	"position": number,
	"discs": Disc[],
	"tracks": Track[]
};

export const Media = autoguard.Object.of<Media>({
	"position": autoguard.Number,
	"discs": autoguard.Array.of(autoguard.Reference.of<Disc>(() => Disc)),
	"tracks": autoguard.Array.of(autoguard.Reference.of<Track>(() => Track))
});

export type Release = {
	"id": string,
	"date": string,
	"title": string,
	"artist-credit": ArtistCredit[],
	"media": Media[]
};

export const Release = autoguard.Object.of<Release>({
	"id": autoguard.String,
	"date": autoguard.String,
	"title": autoguard.String,
	"artist-credit": autoguard.Array.of(autoguard.Reference.of<ArtistCredit>(() => ArtistCredit)),
	"media": autoguard.Array.of(autoguard.Reference.of<Media>(() => Media))
});

export type DiscIdLookupResponse = {
	"releases": Release[]
};

export const DiscIdLookupResponse = autoguard.Object.of<DiscIdLookupResponse>({
	"releases": autoguard.Array.of(autoguard.Reference.of<Release>(() => Release))
});

export type Autoguard = {
	"ArtistCredit": ArtistCredit,
	"Track": Track,
	"Disc": Disc,
	"Media": Media,
	"Release": Release,
	"DiscIdLookupResponse": DiscIdLookupResponse
};

export const Autoguard = {
	"ArtistCredit": ArtistCredit,
	"Track": Track,
	"Disc": Disc,
	"Media": Media,
	"Release": Release,
	"DiscIdLookupResponse": DiscIdLookupResponse
};
