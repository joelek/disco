// This file was auto-generated by @joelek/ts-autoguard. Edit at own risk.

import { guards as autoguard } from "@joelek/ts-autoguard";

export type FieldOrder = ("bff" | "tff" | "progressive");

export const FieldOrder = autoguard.Union.of(
	autoguard.StringLiteral.of("bff"),
	autoguard.StringLiteral.of("tff"),
	autoguard.StringLiteral.of("progressive")
);

export type CropSettings = {
	"w": number,
	"h": number,
	"x": number,
	"y": number
};

export const CropSettings = autoguard.Object.of({
	"w": autoguard.Number,
	"h": autoguard.Number,
	"x": autoguard.Number,
	"y": autoguard.Number
});

export type Setting = {
	"field_order": FieldOrder,
	"crop": CropSettings,
	"compressibility": number
};

export const Setting = autoguard.Object.of({
	"field_order": FieldOrder,
	"crop": CropSettings,
	"compressibility": autoguard.Number
});

export type Database = Record<string, undefined | Setting>;

export const Database = autoguard.Record.of(Setting);

export type Autoguard = {
	"FieldOrder": FieldOrder,
	"CropSettings": CropSettings,
	"Setting": Setting,
	"Database": Database
};

export const Autoguard = {
	"FieldOrder": FieldOrder,
	"CropSettings": CropSettings,
	"Setting": Setting,
	"Database": Database
};
